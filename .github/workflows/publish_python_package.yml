name: Publish Python Package to PyPI

on:
  release:
    types: [ published ]

env:
  PACKAGE_DIR: bindings/python

permissions:
  contents: read

jobs:
  wheels-build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.22.0

      - name: Build wheels
        env:
          CIBW_BUILD: "cp37-* cp38-* cp39-* cp310-* cp311-*"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_BEFORE_BUILD: "pip install scikit-build-core swig"
        run: python -m cibuildwheel --output-dir wheelhouse ${{ env.PACKAGE_DIR }}

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl

  sdist-build:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install build dependencies
        run: python -m pip install build

      - name: Build sdist
        working-directory: ${{ env.PACKAGE_DIR }}
        run: python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          path: ${{ env.PACKAGE_DIR }}/dist/*.tar.gz

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - wheels-build
      - sdist-build
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/BSplineX/
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/